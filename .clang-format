# C Language specifics
Language: Cpp

# Align parameters on the open bracket
# someLongFunction(argument1,
#                  argument2);
AlignAfterOpenBracket: Align


# Don't align consecutive assignments
# int aaaa = 12;
# int b = 14;
AlignConsecutiveAssignments: false

# Align escaped newlines as far left as possible
# #define A   \
#   int aaaa; \
#   int b;    \
#   int cccccccc;
AlignEscapedNewlines: Left

# Align operands of binary and ternary expressions
# int aaa = bbbbbbbbbbb +
#           cccccc;
AlignOperands: true

# Don't align trailing comments
# int a; // Comment a
# int b = 2; // Comment b
AlignTrailingComments: true

AllowShortBlocksOnASingleLine: true
AllowShortCaseLabelsOnASingleLine: true
AllowShortFunctionsOnASingleLine: true
AllowShortIfStatementsOnASingleLine: true
AllowShortLoopsOnASingleLine: true

BreakBeforeBraces: Linux

PointerAlignment: Right
SpaceAfterCStyleCast: true
SpacesBeforeTrailingComments: 1
AlignConsecutiveDeclarations: false

AlwaysBreakAfterReturnType: None #All
BreakBeforeTernaryOperators: True
AlignConsecutiveMacros: true
SortIncludes: true
AlignArrayOfStructures: Right
AttributeMacros: ['__capability', '__unused',  '__output']
ForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]
AlignEscapedNewlines: Right
AlignTrailingComments: true
Standard: c++20 #Latest
AlignOperands:   Align


#QualifierOrder: ['static',  'inline', 'const', 'restrict', 'type', 'volatile' ]

#IncludeBlocksStyle: IBS_Regroup
#QualifierOrder: ['static',  'inline', 'const', 'restrict', 'type', 'volatile' ]
#SeparateDefinitionBlocks: SDS_Always
#AlignArrayOfStructures: AIAS_Right


#AlignConsecutiveMacros: AcrossEmptyLines
#AlignConsecutiveMacros:
# Enabled: true
# AcrossEmptyLines: true
# AcrossComments: false

# IndentFunctionDeclarationAfterType: true 
# IndentWrappedFunctionNames: true 

ForEachMacros:
  - 'for_each_abbrev'
  - 'for_each_builtin'
  - 'for_each_string_list_item'
  - 'for_each_ut'
  - 'for_each_wanted_builtin'
  - 'list_for_each'
  - 'list_for_each_dir'
  - 'list_for_each_prev'
  - 'list_for_each_prev_safe'
  - 'list_for_each_safe'

